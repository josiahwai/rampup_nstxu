 function gdef = gfile_def()
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  SYNTAX:  gdef = gfile_def
%
%  PURPOSE:  Produces G-file variable definition structure for inclusion in
%            gfile structure
%
%  INPUT: (none)
%
%  OUTPUT:
%	gdef = data structure containing EFIT G-file variable definitions
 
%  RESTRICTIONS:
%
%  METHOD:  
%
%  WRITTEN BY:  Jim Leuer 	ON 	01/05/2005
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% From efit_definitions.xls (sheet gfile)

  gdef = struct( ...	
    'brsp', 	'OPTIONAL F-coil current vector; BRSP(1:NFCOIL); UNITS: depend on fcturn in mhdin.dat: fcturn()=1 brsp=[A-turns]; fcturn()=#turns brsp= [A]; brsp.*fcturn() is always [A-t], brsp.*fcturn().*turnfc() is always [A] ', ... 
    'bzero', 	'Vacuum toroidal magnetic field corresponding to RZERO, [T]', ... 
    'cpasma', 	'Plamsma Current [A]', ... 
    'ecase', 	'Identification character string; (1:48 characters of 1st line)', ... 
    'ecurrt', 	'OPTIONAL E-coil current vector; ECURRT(1:NESUM); [A]', ... 
    'ffprim', 	'Poloidal current function derivitive; FFPRIM= f*df/dPsi;  ffprim= -sign(cpasma)*ffprime(in file); See FPOL; Jt (Amp/m2) = R*PPRIME + FFPRIM/(R*muo); FFPRIM(1:NW); [(Tm)^2/(Vs/Rad)]', ... 
    'fpol', 	'Poloidal current function;  F= R*Bt on flux grid; Jt (Amp/m2) = R dP/dPsi + FdF/dPsi/(mu0*R); fpol(1:NW); [Tm]', ... 
    'limitr', 	'Number of limiter points; See: xlim,ylim; []', ... 
    'nbbbs', 	'Number of plasma boundary points; []', ... 
    'nh', 	'Number of vertical Z grid points ', ... 
    'nw', 	'Number of horizontal R grid points ', ... 
    'pcurrt', 	'OPTIONAL Plasma current on each grid point; PCURRT(1:NH;1:NW); [A]', ... 
    'pprime', 	'Plasma presure function derivitive; PPRIME= dp/dPsi;  ppprime= -sign(cpasma)*pprime(in file); See PRES; Jt (Amp/m2) = R*PPRIME + FFPRIM/(R*muo); PPRIME(1:NW); [A/m^3 => N/(m^2)/(Vs/rad)]', ... 
    'pres', 	'Plasma pressure function;  PRES= pressure on flux grid, Jt (Amp/m2) = R dP/dPsi + FdF/dpsi/(R*mu0); PRES(1:NW); [N/m^2]', ... 
    'psirz', 	'Poloidal flux on plasma grid in radial direction 1st order; PSIRZ(1:NW,1:NH); [Vs/rad]', ... 
    'qpsi', 	'Safety factor, q function; q(1)= axis; qpsi(1:nw); []', ... 
    'rbbbs', 	'Radial locaion of boundary; RBBBS(1:NBBBS); [m]', ... 
    'rgrid1', 	'Starting Radius of Grid; =rgrid(1); [m]', ... 
    'rmaxis', 	'R of magnetic axis; [m]', ... 
    'rzero', 	'Radius Used in Current Profile Parameterization for Ro;  Radial location where BZERO is measured; [m] ', ... 
    'ssibry', 	'Poloidal flux at plasma boundary; [Vs/rad]', ... 
    'ssimag', 	'Poloidal flux at magnetic axis; [Vs/rad]', ... 
    'xdim', 	'Width of Grid; =rgrid(nw)-rgrid(1); [m]', ... 
    'xlim', 	'Radial locaion of limiter points; XLIM(1:LIMITR); [m]', ... 
    'ylim', 	'Z locaion of limiter points; YLIM(1:LIMITR); [m]', ... 
    'zbbbs', 	'Z location of boundary; ZBBBS(1:NBBBS); [m]', ... 
    'zdim', 	'Height of Grid; =zgrid(nh)-zgrid(1); [m]', ... 
    'zmaxis', 	'Z of magnetic axis; [m]', ... 
    'zmid', 	'Z of center of computational box; =(zgrid(1)+zgrid(nh))/2.0; [m] ' ... 
	);
  return
