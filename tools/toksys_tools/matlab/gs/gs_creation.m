%  USAGE:   gs_creation
%
%  PURPOSE: Create a small plasma
%
%  INPUTS: Variables generated by gs_breakdown are needed
%
%  OUTPUTS: A plasma equilibrium

%	
%  METHOD: 
	
%  NOTES:  
	
%  VERSION %W% %G%
%
%  WRITTEN BY:  Anders Welander ON 2015-03-09
%
%  MODIFICATION HISTORY:				
%	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

psizr_app = reshape(mpc*ic+mpv*iv,nz,nr);

% Find bdef on the inboard limiter at dpsizr/dz = 0
if 0
zm = (max(zl)+min(zl))/2;
ylz = sum(wlz.*psizr_app(iil),2);
k = 1; % If there is no ylz = 0 then pick this point
x = 0;
dum = inf;
for i = 1:nl-1
  if ylz(i)*ylz(i+1) < 0
    if dum > abs(zl(i)-zm)+rl(i) % Preferred point is inside close to zm
      dum = zl(i)-zm+rl(i);
      k = i;
      x = -ylz(i)/(ylz(i+1)-ylz(i));
    end
  end
end
rbdef = rl(k)+x*(rl(k+1)-rl(k));
zbdef = zl(k)+x*(zl(k+1)-zl(k));
end
vlim = [turnin*[drl(lim);dzl(lim)]]'/dl(lim);

kr0 = min(nr-3,max(1,floor((rbdef-rg(1))/dr)));
kz1 = min(nz-2,max(2,ceil((zbdef-zg(1))/dz)));
k = kr0*nz+kz1;
iib = k+neighbors'; % iia indexes 16 points around magnetic axis
pp = psizr(iib);
tr = (rbdef-rgg(k))/dr;
tz = (zbdef-zgg(k))/dz;
wb = reshape(([1 tz tz^2 tz^3]*mx)'*[1 tr tr^2 tr^3]*mx,1,16);
psibry = wb*pp;
aminor = (max(rl)-min(rl))*0.3;
rmaxis = rbdef+aminor;
zmaxis = zbdef;
nbbbs = nbbbs_max;
thbdef = -pi;
thbbbs = thbdef+linspace(0,2*pi,nbbbs_max)';
rhobbbs(:) = aminor;
rbbbs = rmaxis + aminor*cos(thbbbs);
zbbbs = zmaxis + aminor*sin(thbbbs);
gs_trace_edge
gs_cell_coverage
Atot = sum(Acell(:));
pcurrt = Acell/Atot;
psizr_pla = reshape(dpsizrpladpcurrt*pcurrt(:),nz,nr);
cpasma = -pinv(...
  gs_interp2(rg,zg,psizr_pla,rbbbs,zbbbs) - ...
  gs_interp2(rg,zg,psizr_pla,rbdef,zbdef))*(...
  gs_interp2(rg,zg,psizr_app,rbbbs,zbbbs) - ...
  gs_interp2(rg,zg,psizr_app,rbdef,zbdef));
psizr_pla = cpasma*psizr_pla;
psizr = psizr_app + psizr_pla;
gs_update_maxis
psimag = wa*psizr(iia);
psibry = wb*psizr(iib);
jp0 = c1(1,:)*sp0*rmaxis*twopi/(psibry-psimag);
jf0 = c1(1,:)*sf0/rmaxis*twopi/(psibry-psimag)/mu0;
jav = cpasma/Atot;
sp = 0.1*jav/jp0*sp0;
sf = 0.9*jav/jf0*sf0;
plasma = true;
