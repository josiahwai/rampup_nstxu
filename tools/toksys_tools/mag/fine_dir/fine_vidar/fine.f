      SUBROUTINE FINE (M1,A3,A4,Z3,Z4,AT1,RP,ZP,HR,HZ,FL)
      COMMON/XW/X(182),W(182),N1(40)
      DIMENSION HR1(40),HZ1(40),FL1(40)
      LOGICAL INSIDE
      CALL OHFIDT
      PI=3.141593
      J=3
      A1=A3
      A2=A4
      AT=AT1
      INSIDE=.FALSE.
      IF(A3.GE.RP.OR.RP.GE.A4) GO TO 3
C     IS POINT INSIDE COIL ?
      IF(Z3.LT.ZP.AND.ZP.LT.Z4) INSIDE=.TRUE.
C     SPLIT COIL AT RP
C     CAL. LOWER PORTION
      J=1
      AT=AT1*(RP-A3)/(A4-A3)
      A1=A3
      A2=RP
C
C     STM. 3 TO 20 CONSTITUTES A SINGLE COIL CASE
    3 IF(Z4.LT.10000.0) GO TO 4
      Z1=Z3-ZP
      Z2=10000.0
      ZQ=ABS(Z1)
      CD=AT
      GO TO 6
    4 IF(Z3.GT.-10000.0) GO TO 5
      Z1=-10000.0
      Z2=Z4-ZP
      ZQ=ABS(Z2)
      CD=AT
      GO TO 6
    5 Z1=Z3-ZP
      Z2=Z4-ZP
      IF(Z3.EQ.Z4) GO TO 7
      CD=AT/(Z4-Z3)
C     DETERMINE GAUSS QUART. ORDER M1
    7 ZQ=ABS(Z1)
      IF((ZP-0.5*(Z3+Z4)).GT.0.0) ZQ=ABS(Z2)
    6 AC=(A2+A1)/2.0
      DA=A2-A1+1.0E-10
      IF(DA.LT.0.0) GO TO 30
      RQ=ABS(RP-AC)-DA/2.0
      Q=AMAX1(RQ,ZQ)
      IF(Q.LT.1.0E-5) Q=1.0E-5
      SQ=DA/Q
      IF(SQ.GT.4.0) SQ=8.0
      ST=SQ*DA/AC
    8 M1=3
      IF( 0.0.LT.ST.AND.ST.LE. 0.1) GO TO 10
      M1=4
      IF( 0.1.LT.ST.AND.ST.LE. 0.4) GO TO 10
      M1=5
      IF( 0.4.LT.ST.AND.ST.LE. 1.0) GO TO 10
      M1=6
      IF( 1.0.LT.ST.AND.ST.LE. 2.0) GO TO 10
      M1=8
      IF( 2.0.LT.ST.AND.ST.LE. 4.0) GO TO 10
      M1=10
      IF( 4.0.LT.ST.AND.ST.LE. 8.0) GO TO 10
      M1=12
      IF( 8.0.LT.ST.AND.ST.LE.1.E9) GO TO 10
      GO TO 32
   10 CONTINUE
      IF(INSIDE) GO TO 13
C     POINT OUTSIDE SOURCE REGION.
      DO 12 N=1,M1
      A=0.5*DA*(X(N1(M1)+N)+1.0)+A1
      IF(Z1.EQ.Z2) GO TO 11
      CALL OHFISL (A,Z1,Z2,CD,RP,HR1(N),HZ1(N),FL1(N),IT)
      GO TO 12
   11 CALL OHFILF (A,-Z1,AT,RP,HR1(N),HZ1(N),FL1(N))
   12 CONTINUE
      GO TO 20
C     POINT INSIDE SOURCE REGION.
   13 DO 14 N=1,M1
      A=0.5*DA*(X(N1(M1)+N)+1.0)+A1
      CALL OHFISL (A,-11000.0,Z1,CD,RP,HRN,HZN,FLN,IT)
      CALL OHFISL (A,Z2,11000.0, CD,RP,HRP,HZP,FLP,IT)
      HR1(N)= HRN+HRP
      HZ1(N)= HZN+HZP
      FL1(N)= FLN+FLP
   14 CONTINUE
C
   20 CALL OHFIGA (M1,HR1,HR)
      CALL OHFIGA (M1,HZ1,HZ)
      CALL OHFIGA (M1,FL1,FL)
C
      GO TO (24,26,28),J
C     CAL. UPPER PORTION
   24 HRL=HR
      HZL=HZ
      FLL=FL
      J=2
      AT=AT1*(A4-RP)/(A4-A3)
      A1=RP
      A2=A4
      GO TO 3
C     ADD THE TWO PORTIONS
   26 IF(.NOT.INSIDE) GO TO 27
      CD=AT1/((Z4-Z3)*(A4-A3))
      HR=-HR-HRL
      HZ=CD*(A4-RP)-HZ-HZL
      FL=CD*PI*(RP**2*(3.0*A4-2.0*RP)-A3**3)/3.0-FL-FLL
      RETURN
   27 HR=HR+HRL
      HZ=HZ+HZL
      FL=FL+FLL
   28 RETURN
   30 WRITE (6,31) A3,A4
   31 FORMAT (' OR IS LESS THAN IR (A1 = ',F6.3,'A2 = ',F6.3,')')
      CALL EXIT
   32 WRITE (6,33) ST,SQ,DA,AC,RP,ZP
   33 FORMAT (' EXIT IN SUBR. OHFINE ',6E12.5)
      CALL EXIT
      END
      SUBROUTINE OHFIDT
C     BLOCK DATA
C     GAUSSIAN QUAD. ORDERS, - 2,3,4,5,6,8,10,12,16,20,24,32,40
      COMMON/XW/X1(86),X2(96),W1(86),W2(96),N1(40)
C     COEFFICIENTS FOR FILAMENT FIELD.
      COMMON /QEP/ AQ(12),AE(12),AP(12)
      REAL*8 AQ,AE,AP
      DATA X1/    .5773503,-.5773503, .7745967, .0000000,-.7745967,
     1  .8611363, .3399810,-.3399810,-.8611363, .9061798, .5384693,
     1  .0000000,-.5384693,-.9061798, .9324695, .6612094, .2386192,
     1 -.2386192,-.6612094,-.9324695, .9602899, .7966665, .5255324,
     1  .1834346,-.1834346,-.5255324,-.7966665,-.9602899, .9739065,
     1  .8650634, .6794096, .4333954, .1488743,-.1488743,-.4333954,
     1 -.6794096,-.8650634,-.9739065, .9815606, .9041173, .7699027,
     1  .5873180, .3678315, .1252334,-.1252334,-.3678315,-.5873180,
     1 -.7699027,-.9041173,-.9815606, .9894009, .9445750, .8656312,
     1  .7554044, .6178762, .4580168, .2816036, .0950125,-.0950125,
     1 -.2816036,-.4580168,-.6178762,-.7554044,-.8656312,-.9445750,
     1 -.9894009, .9931286, .9639719, .9122344, .8391170, .7463319,
     1  .6360537, .5108670, .3737061, .2277859, .0765265,-.0765265,
     1 -.2277859,-.3737061,-.5108670,-.6360537,-.7463319,-.8391170,
     1 -.9122344,-.9639719,-.9931286 /
      DATA X2/                        .9951872, .9747286, .9382746,
     1  .8864155, .8200020, .7401242, .6480937, .5454215, .4337935,
     1  .3150427, .1911189, .0640569,-.0640569,-.1911189,-.3150427,
     1 -.4337935,-.5454215,-.6480937,-.7401242,-.8200020,-.8864155,
     1 -.9382746,-.9747286,-.9951872, .9972639, .9856115, .9647623,
     1  .9349061, .8963212, .8493676, .7944838, .7321821, .6630443,
     1  .5877158, .5068999, .4213513, .3318686, .2392874, .1444720,
     1  .0483077,-.0483077,-.1444720,-.2392874,-.3318686,-.4213513,
     1 -.5068999,-.5877158,-.6630443,-.7321821,-.7944838,-.8493676,
     1 -.8963212,-.9349061,-.9647623,-.9856115,-.9972639, .9982377,
     1  .9907262, .9772599, .9579168, .9328128, .9020988, .8659595,
     1  .8246122, .7783057, .7273183, .6719567, .6125539, .5494671,
     1  .4830758, .4137792, .3419941, .2681522, .1926976, .1160841,
     1  .0387724,-.0387724,-.1160841,-.1926976,-.2681522,-.3419941,
     1 -.4137792,-.4830758,-.5494671,-.6125539,-.6719567,-.7273183,
     1 -.7783057,-.8246122,-.8659595,-.9020988,-.9328128,-.9579168,
     1 -.9772599,-.9907262,-.9982377 /
      DATA W1/   1.000000 ,1.000000 , .5555556, .8888889, .5555556,
     1  .3478548, .6521452, .6521452, .3478548, .2369269, .4786287,
     1  .5688889, .4786287, .2369269, .1713245, .3607616, .4679139,
     1  .4679139, .3607616, .1713245, .1012285, .2223810, .3137066,
     1  .3626838, .3626838, .3137066, .2223810, .1012285, .0666713,
     1  .1494513, .2190864, .2692667, .2955242, .2955242, .2692667,
     1  .2190864, .1494513, .0666713, .0471753, .1069393, .1600783,
     1  .2031674, .2334925, .2491470, .2491470, .2334925, .2031674,
     1  .1600783, .1069393, .0471753, .0271525, .0622535, .0951585,
     1  .1246290, .1495960, .1691565, .1826034, .1894506, .1894506,
     1  .1826034, .1691565, .1495960, .1246290, .0951585, .0622535,
     1  .0271525, .0176140, .0406014, .0626720, .0832767, .1019301,
     1  .1181945, .1316886, .1420961, .1491730, .1527534, .1527534,
     1  .1491730, .1420961, .1316886, .1181945, .1019301, .0832767,
     1  .0626720, .0406014, .0176140 /
      DATA W2/                        .0123412, .0285314, .0442774,
     1  .0592986, .0733465, .0861902, .0976187, .1074443, .1155057,
     1  .1216705, .1258375, .1279382, .1279382, .1258375, .1216705,
     1  .1155057, .1074443, .0976187, .0861902, .0733465, .0592986,
     1  .0442774, .0285314, .0123412, .0070186, .0162744, .0253921,
     1  .0342739, .0428359, .0509981, .0586841, .0658222, .0723458,
     1  .0781939, .0833119, .0876521, .0911739, .0938444, .0956387,
     1  .0965401, .0965401, .0956387, .0938444, .0911739, .0876521,
     1  .0833119, .0781939, .0723458, .0658222, .0586841, .0509981,
     1  .0428359, .0342739, .0253921, .0162744, .0070186, .0045213,
     1  .0104983, .0164211, .0222458, .0279370, .0334602, .0387822,
     1  .0438709, .0486958, .0532278, .0574398, .0613062, .0648040,
     1  .0679120, .0706116, .0728866, .0747232, .0761104, .0770398,
     1  .0775059, .0775059, .0770398, .0761104, .0747232, .0728866,
     1  .0706116, .0679120, .0648040, .0613062, .0574398, .0532278,
     1  .0486958, .0438709, .0387822, .0334602, .0279370, .0222458,
     1  .0164211, .0104983, .0045213 /
cjal02jul2011 It looks like the ,28, below should be ,50, (see fine_data.xls)
c             however, fine only uses up to m1=12 which only uses up to ,38,
c             so not an issue for fine but to use for other gausian watch out
      DATA N1/  500,0,2,5,9,14,500,20,500,28,500,38,3*500,26,3*500,66,
     1  3*500,86,7*500,110,7*500,142 /
      DATA AQ/ 3.000000D 00,-.375000000000000D 00,-.468750000000000D-01,
     1-.146484375000000D-01,-.640869140625000D-02,-.336456298828125D-02,
     1-.198268890380859D-02,-.126573443412781D-02,-.857007689774036D-03,
     1-.607047113589943D-03,-.445627767476255D-03,-.336752801558762D-03/
      DATA AE/ 0.250000D 00,0.156250000000000D-01,0.390625000000000D-02,
     10.152587890625000D-02,0.747680664062500D-03,0.420570373535156D-03,
     10.259637832641601D-03,0.171401537954807D-03,0.119028845801949D-03,
     10.859983410919084D-04,0.641433907730970D-04,0.491097835606524D-04/
      DATA AP/ 1.000000D 00,0.375000000000000D 00,0.234375000000000D 00,
     10.170898437500000D 00,0.134582519531250D 00,0.111030578613281D 00,
     10.945081710815427D-01,0.822727382183072D-01,0.728456536307928D-01,
     10.653587392298502D-01,0.592684930743416D-01,0.542172010509602D-01/
      RETURN
      END
      SUBROUTINE OHFIGA (M1,Y,INT)
      REAL*4 INT,Y(40)
      COMMON/XW/X(182),W(182),N1(40)
    1 FORMAT ('  M1 = ',I5,'NOT STANDARD')
C
      IF(N1(M1).EQ.500) GO TO 28
C
      INT=0.0
      DO 24 N=1,M1
   24 INT=INT+W(N1(M1)+N)*Y(N)
      INT=0.5*INT
      RETURN
   28 WRITE (6,1) M1
      CALL EXIT
      END
      SUBROUTINE OHFISL (AS,Z1,Z2,CDS,RS,HR,HZ,FL,IT)
C     9/6/73 REVISED VERSION   U. R. CHRISTENSEN
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*4 AS,Z1,Z2,CDS,RS,HR,HZ,FL
      REAL*8 K2
      A=AS
      CD=CDS
      R=RS
      PI=3.141592653589793D0
      M=1
      Z=Z2
C
      AMR=A-R
      IF(DABS(AMR).LT.5.0D-7) AMR=0.0D0
      AMR2=AMR**2
      APR2=(A+R)**2
C
C     THE FOLLOWING 12 STM. ARE TO SPEED-UP THE SEMI-INFINITE CASE.
    4 IF(DABS(Z).LT.10000.0) GO TO 10
      HR1=0.0D0
      IF(AMR) 6,7,8
    6 HZ1=0.0D0
      FL1=DSIGN(0.5D0*PI*A*A,Z)
      GO TO 42
    7 HZ1=DSIGN(0.25D0,Z)
      FL1=DSIGN(0.5D0*PI*A*A,Z)
      GO TO 42
    8 HZ1=DSIGN(0.50D0,Z)
      FL1=DSIGN(0.5D0*PI*R*R,Z)
      GO TO 42
   10 R12=APR2+Z*Z
      R1=DSQRT(R12)
      K2=4.0D0*A*R/R12
      HR1=0.0D0
      HZ1=0.0D0
      FL1=0.0D0
      IT=0
      IF(K2.GE.1.0D0) GO TO 60
C     POINT AT EDGE,  NO CONTRIBUTION.
C
      ALF=1.0D0
      BET=DSQRT(1.0D0-K2)
      DEL=1.0D0
      IF(AMR2.EQ.0.0D0) GO TO 18
      DEL=(AMR2/APR2)/BET
      EPS=4.0D0*A*R/AMR2
   18 ZET=0.0D0
      S=0.0D0
      FAC=0.5D0
   20 S=S+FAC*(ALF-BET)**2
      IF(IT.GE.20) GO TO 30
      ALF1=ALF
      ALF=0.5D0*(ALF+BET)
      BET=DSQRT(ALF1*BET)
      ZET1=ZET
      ZET=0.5D0*(EPS+ZET)
      EPS=(DEL*EPS+ZET1)/(1.0D0+DEL)
      DEL=(2.0D0+DEL+1.0D0/DEL)*BET/(4.0D0*ALF)
      FAC=2.0D0*FAC
      IT=IT+1
      IF(DABS(ALF-BET).GT.0.0000001) GO TO 20
      IF(Z.EQ.0.0D0) GO TO 30
      IF(DABS(DEL-1.0D0).GT.0.0000001) GO TO 20
   30 GAM=S+K2
      HR1=0.0D0
      IF(R.EQ.0.0) GO TO 40
      HR1=R1*S/(8.0D0*R*ALF)
   40 HZ1=Z*( 2.0D0*A+AMR*ZET)/(4.0D0*(A+R)*R1*ALF)
      FL1=PI*Z*(0.5D0*R1*GAM-AMR2*ZET/R1)/(4.0D0*ALF)
   42 IF(M.NE.1) GO TO 50
      M=2
      Z=Z1
      HR2=HR1
      HZ2=HZ1
      FL2=FL1
      GO TO 4
   50 HR=     CD*(HR2-HR1)
      HZ=     CD*(HZ2-HZ1)
      FL=     CD*(FL2-FL1)
      RETURN
   60 PRINT 1, A,Z1,Z2,Z,R,R12,APR2,K2
      GO TO 42
    1 FORMAT (//'   POINT AT EDGE IN OHFISL, A,Z1,Z2,Z,R,R12,APR2,K2 ',
     #    /(2X,6D21.15))
      END
      SUBROUTINE OHFILF (A,Z,NI,R,HR,HZ,FL)
      REAL*4 M,M2,NI,KE
      REAL*8 AQ,AE,AP,V,EA,EB,KA,KB,W,E,K
      COMMON /QEP/ AQ(12),AE(12),AP(12)
      REAL*8 AK1,AK2,AK3,AK4,AK5,BK1,BK2,BK3,BK4,BK5, AE1,AE2,AE3,AE4,
     1  BE1,BE2,BE3,BE4
      DATA   AK1,AK2,AK3,AK4,AK5,BK1,BK2,BK3,BK4,BK5, AE1,AE2,AE3,AE4,
     1  BE1,BE2,BE3,BE4  /  1.38629436112,0.09666344259,0.03590092383,
     1  0.03742563713,0.01451196212,0.5D0,0.12498593597,0.06880248576,
     1  0.03328355346,0.00441787012, 0.44325141463,0.06260601220,
     1  0.04757383546,0.01736506451,0.24998368310,0.09200180037,
     1  0.04069697526,0.00526449639 /
    7 ERR=0.000001
      IF(NI.EQ.0.0) GO TO 35
      R12=(A+R)**2+Z**2
      R1=SQRT(R12)
      R22=R12-4.0*A*R
      C2=4.0*A*R/R12
      IF(C2.GE.1.0) GO TO 30
      IF(C2.LT.0.90) GO TO 10
      V=DBLE(R22/R12)
      EA=(((AE4*V+AE3)*V+AE2)*V+AE1)*V+1.0D0
      EB=(((BE4*V+BE3)*V+BE2)*V+BE1)*V
      KA=(((AK5*V+AK4)*V+AK3)*V+AK2)*V+AK1
      KB=(((BK5*V+BK4)*V+BK3)*V+BK2)*V+BK1
      W=DLOG(V)
      E=EA-W*EB
      K=KA-W*KB
      KE=SNGL(K-E)
      RE=2.0*A*SNGL(E)/R22
      B=0.15915494*NI/R1
      HR=0.0
      IF(R.EQ.0.0) GO TO 8
      HR=B*(-KE+R*RE)*Z/R
    8 HZ=B*(KE+(A-R)*RE)
      FL=NI*R1*(KE-0.5*C2*SNGL(K))
      RETURN
   10 N=0
      M=4.0*A*R/(R1+SQRT(ABS(R22)))**2
      M2=M*M
      PU=1.0
      Q=0.0
      E=1.0
      P=0.0
      B=NI/(4.0*R1*(1.0-M)*(1.0-M2))
      HR=0.0
      IF(R.EQ.0.0) GO TO 16
      DO 12 N=1,12
      PU=PU*M2
      QT=AQ(N)*PU
      Q=Q+QT
      E=E+AE(N)*PU
      P=P+AP(N)*PU
      IF(ABS(QT/Q).LT.ERR) GO TO 14
   12 CONTINUE
   14 HR=B*Z*Q/R
   16 HZ=B*(2.0*E*(A*(1.0+M))**2/R12-Q)
      FL=1.5707963*NI*R1*P/(1.0+M)
      RETURN
   30 HR =1.0E10
      HZ =1.0E10
      FL =1.0E10
      RETURN
   35 HR=0.0
      HZ=0.0
      FL=0.0
      RETURN
      END
